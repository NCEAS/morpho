/**
 *        Name: ClientFramework.java
 *     Purpose: A Class that is the top frame for an XML_Query sample
 *		application (searchs local collection of XML files
 *   Copyright: 2000 Regents of the University of California and the
 *              National Center for Ecological Analysis and Synthesis
 *     Authors: Dan Higgins
 *
 *     Version: '$Id: ClientFramework.java,v 1.1 2000-07-11 20:54:08 higgins Exp $'
 */

package edu.ucsb.nceas.dtclient;
 
 
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import com.symantec.itools.javax.swing.JToolBarSeparator;
import com.symantec.itools.javax.swing.icons.ImageIcon;
import com.symantec.itools.javax.swing.models.StringComboBoxModel;
import com.symantec.itools.javax.swing.borders.EtchedBorder;
import com.symantec.itools.javax.swing.JButtonGroupPanel;
import com.symantec.itools.javax.swing.models.StringListModel;
import com.symantec.itools.javax.swing.models.StringTreeModel;
import com.symantec.itools.javax.swing.borders.LineBorder;

import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import java.io.*;

// import edu.ucsb.nceas.querybean.*;
/**
 * A basic JFC 1.1 based application.
 */
public class ClientFramework extends javax.swing.JFrame
{
    
//	LocalQuery lq = null;
	String[] searchmode = {"contains","contains-not","is","is-not","starts-with","ends-with"};
    JTable table;
	public ClientFramework()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setJMenuBar(JMenuBar1);
		setTitle("NCEAS Metadata Desktop Client");
		setDefaultCloseOperation(javax.swing.JFrame.DO_NOTHING_ON_CLOSE);
		getContentPane().setLayout(new BorderLayout(0,0));
		setSize(698,480);
		setVisible(false);
		try {
			newIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/new.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ newIcon.move(144,312);
		try {
			openIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/open.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ openIcon.move(120,312);
		try {
			saveIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/save.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ saveIcon.move(96,312);
		try {
			cutIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/cut.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ cutIcon.move(72,312);
		try {
			copyIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/copy.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ copyIcon.move(48,312);
		try {
			pasteIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/paste.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ pasteIcon.move(24,312);
		try {
			aboutIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/about.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ aboutIcon.move(0,312);
		try {
			findIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/Find16.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ findIcon.move(192,312);
		try {
			NCEASIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/NCEASlogo.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ NCEASIcon.move(264,481);
		try {
			NSFIcon.setImageLocation(symantec.itools.net.RelativeURL.getURL("images/nsf_logo.gif"));
		}
		catch (java.net.MalformedURLException error) { }
		//$$ NSFIcon.move(264,481);
		//$$ imageIcon1.move(264,481);
		saveFileDialog.setMode(FileDialog.SAVE);
		saveFileDialog.setTitle("Save");
		//$$ saveFileDialog.move(24,336);
		openFileDialog.setMode(FileDialog.LOAD);
		openFileDialog.setTitle("Open");
		//$$ openFileDialog.move(0,336);
		JPanel2.setLayout(new FlowLayout(FlowLayout.LEFT,0,0));
		getContentPane().add(BorderLayout.NORTH, JPanel2);
		JPanel2.setBounds(0,0,698,40);
		JToolBar1.setAlignmentY(0.222222F);
		JPanel2.add(JToolBar1);
		JToolBar1.setBounds(0,0,636,40);
		newButton.setDefaultCapable(false);
		newButton.setToolTipText("Create a new document");
		newButton.setMnemonic((int)'N');
		JToolBar1.add(newButton);
		newButton.setBounds(16,11,51,27);
		openButton.setDefaultCapable(false);
		openButton.setToolTipText("Open an existing document");
		openButton.setMnemonic((int)'O');
		JToolBar1.add(openButton);
		openButton.setBounds(67,11,51,27);
		saveButton.setDefaultCapable(false);
		saveButton.setToolTipText("Save the active document");
		saveButton.setMnemonic((int)'S');
		JToolBar1.add(saveButton);
		saveButton.setBounds(118,11,51,27);
		JToolBar1.add(JToolBarSeparator1);
		JToolBarSeparator1.setBounds(169,9,10,5);
		cutButton.setDefaultCapable(false);
		cutButton.setToolTipText("Cut the selection and put it on the Clipboard");
		cutButton.setMnemonic((int)'T');
		JToolBar1.add(cutButton);
		cutButton.setBounds(179,11,51,27);
		copyButton.setDefaultCapable(false);
		copyButton.setToolTipText("Copy the selection and put it on the Clipboard");
		copyButton.setMnemonic((int)'C');
		JToolBar1.add(copyButton);
		copyButton.setBounds(230,11,51,27);
		pasteButton.setDefaultCapable(false);
		pasteButton.setToolTipText("Insert Clipboard contents");
		pasteButton.setMnemonic((int)'P');
		JToolBar1.add(pasteButton);
		pasteButton.setBounds(281,11,51,27);
		JToolBar1.add(JToolBarSeparator2);
		JToolBarSeparator2.setBounds(332,9,10,5);
		aboutButton.setDefaultCapable(false);
		aboutButton.setToolTipText("Display program information, version number and copyright");
		aboutButton.setMnemonic((int)'A');
		JToolBar1.add(aboutButton);
		aboutButton.setBounds(342,11,51,27);
		JToolBar1.add(JToolBarSeparator3);
		JToolBarSeparator3.setBounds(393,9,10,5);
		ToolBarSearchText.setColumns(12);
		JToolBar1.add(ToolBarSearchText);
		ToolBarSearchText.setFont(new Font("Dialog", Font.PLAIN, 12));
		ToolBarSearchText.setBounds(403,2,132,36);
		queryButton.setDefaultCapable(false);
		queryButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		queryButton.setText("Find Text");
		queryButton.setActionCommand("Find Text");
		JToolBar1.add(queryButton);
		queryButton.setFont(new Font("Dialog", Font.PLAIN, 10));
		queryButton.setBounds(535,11,99,27);
		JPanel1.setLayout(new BorderLayout(0,0));
		getContentPane().add(BorderLayout.CENTER, JPanel1);
		JPanel1.setBounds(0,40,698,440);
		JPanel1.add(BorderLayout.CENTER, JTabbedPane1);
		JTabbedPane1.setBounds(0,0,698,440);
		IntroPanel.setLayout(new BorderLayout(0,0));
		JTabbedPane1.add(IntroPanel);
		IntroPanel.setBounds(2,27,693,410);
		IntroPanel.setVisible(false);
		JLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		IntroPanel.add(BorderLayout.WEST, JLabel1);
		JLabel1.setBounds(0,0,105,410);
		JLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		IntroPanel.add(BorderLayout.EAST,JLabel2);
		JLabel2.setBounds(602,0,91,410);
		JPanel3.setLayout(new BorderLayout(0,0));
		IntroPanel.add(BorderLayout.CENTER,JPanel3);
		JPanel3.setBounds(105,0,497,410);
		JPanel5.setLayout(new GridLayout(4,1,0,0));
		JPanel3.add(BorderLayout.NORTH,JPanel5);
		JPanel5.setBounds(0,0,497,168);
		JLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		JLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel3.setText("KDI");
		JPanel5.add(JLabel3);
		JLabel3.setForeground(java.awt.Color.red);
		JLabel3.setFont(new Font("Dialog", Font.PLAIN, 36));
		JLabel3.setBounds(0,0,497,42);
		JLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel6.setText("Desktop Client");
		JPanel5.add(JLabel6);
		JLabel6.setForeground(java.awt.Color.black);
		JLabel6.setFont(new Font("Dialog", Font.BOLD, 14));
		JLabel6.setBounds(0,42,497,42);
		JLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel7.setText("Created for NSF by NCEAS");
		JPanel5.add(JLabel7);
		JLabel7.setForeground(java.awt.Color.black);
		JLabel7.setBounds(0,84,497,42);
		JLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel8.setText("Version 0.5 - June 2000");
		JPanel5.add(JLabel8);
		JLabel8.setForeground(java.awt.Color.black);
		JLabel8.setFont(new Font("Dialog", Font.PLAIN, 12));
		JLabel8.setBounds(0,126,497,42);
		JPanel4.setLayout(new GridBagLayout());
		JPanel3.add(BorderLayout.SOUTH,JPanel4);
		JPanel4.setBounds(0,293,497,117);
		JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel4.setText("Click on \'Connect\' button to connect to Server");
		JPanel4.add(JLabel4,new com.symantec.itools.awt.GridBagConstraintsD(0,0,2,1,0.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.NONE,new Insets(12,102,0,0),0,0));
		JLabel4.setForeground(java.awt.Color.black);
		JLabel4.setBounds(102,12,258,15);
		JButton1.setText("Connect to Server");
		JPanel4.add(JButton1,new com.symantec.itools.awt.GridBagConstraintsD(0,1,1,1,0.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.NONE,new Insets(15,150,0,0),0,0));
		JButton1.setBounds(150,42,137,25);
		JLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel5.setText("or Click on any of the tabs at the top to use local computer only");
		JPanel4.add(JLabel5,new com.symantec.itools.awt.GridBagConstraintsD(0,2,3,1,1.0,0.0,java.awt.GridBagConstraints.CENTER,java.awt.GridBagConstraints.HORIZONTAL,new Insets(11,42,24,58),0,0));
		JLabel5.setForeground(java.awt.Color.black);
		JLabel5.setBounds(42,78,397,15);
		EditorPanel.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		JTabbedPane1.add(EditorPanel);
		EditorPanel.setBounds(2,27,693,410);
		EditorPanel.setVisible(false);
		QueryPanel.setLayout(new BorderLayout(0,0));
		JTabbedPane1.add(QueryPanel);
		QueryPanel.setBounds(2,27,693,410);
		QueryPanel.setVisible(false);
	//	QueryPanel.add(BorderLayout.CENTER,queryBean1);
	//	queryBean1.setBounds(0,0,693,410);
		DataViewerPanel.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		JTabbedPane1.add(DataViewerPanel);
		DataViewerPanel.setBounds(2,27,693,410);
		DataViewerPanel.setVisible(false);
		JTabbedPane1.setSelectedComponent(IntroPanel);
		JTabbedPane1.setSelectedIndex(0);
		JTabbedPane1.setTitleAt(0,"Introduction");
		JTabbedPane1.setTitleAt(1,"MetaData Editor");
		JTabbedPane1.setTitleAt(2,"MetaData Query");
		JTabbedPane1.setTitleAt(3,"Data Viewer");
		//$$ lineBorder1.move(240,481);
		//$$ stringListModel1.move(72,406);
		//$$ stringComboBoxModel1.move(48,481);
		//$$ stringComboBoxModel2.move(72,481);
		//$$ JMenuBar1.move(168,312);
		fileMenu.setText("File");
		fileMenu.setActionCommand("File");
		fileMenu.setMnemonic((int)'F');
		JMenuBar1.add(fileMenu);
		newItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.Event.CTRL_MASK));
		newItem.setText("New");
		newItem.setActionCommand("New");
		newItem.setMnemonic((int)'N');
		fileMenu.add(newItem);
		openItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.Event.CTRL_MASK));
		openItem.setText("Open...");
		openItem.setActionCommand("Open...");
		openItem.setMnemonic((int)'O');
		fileMenu.add(openItem);
		saveItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.Event.CTRL_MASK));
		saveItem.setText("Save");
		saveItem.setActionCommand("Save");
		saveItem.setMnemonic((int)'S');
		fileMenu.add(saveItem);
		saveAsItem.setText("Save As...");
		saveAsItem.setActionCommand("Save As...");
		saveAsItem.setMnemonic((int)'A');
		fileMenu.add(saveAsItem);
		fileMenu.add(JSeparator1);
		exitItem.setText("Exit");
		exitItem.setActionCommand("Exit");
		exitItem.setMnemonic((int)'X');
		fileMenu.add(exitItem);
		editMenu.setText("Edit");
		editMenu.setActionCommand("Edit");
		editMenu.setMnemonic((int)'E');
		JMenuBar1.add(editMenu);
		cutItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.Event.CTRL_MASK));
		cutItem.setText("Cut");
		cutItem.setActionCommand("Cut");
		cutItem.setMnemonic((int)'T');
		editMenu.add(cutItem);
		copyItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.Event.CTRL_MASK));
		copyItem.setText("Copy");
		copyItem.setActionCommand("Copy");
		copyItem.setMnemonic((int)'C');
		editMenu.add(copyItem);
		pasteItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.Event.CTRL_MASK));
		pasteItem.setText("Paste");
		pasteItem.setActionCommand("Paste");
		pasteItem.setMnemonic((int)'P');
		editMenu.add(pasteItem);
		helpMenu.setText("Help");
		helpMenu.setActionCommand("Help");
		helpMenu.setMnemonic((int)'H');
		JMenuBar1.add(helpMenu);
		aboutItem.setText("About...");
		aboutItem.setActionCommand("About...");
		aboutItem.setMnemonic((int)'A');
		helpMenu.add(aboutItem);
		cutButton.setIcon(cutIcon);
		//$$ stringTreeModel1.move(216,481);
		//$$ stringComboBoxModel3.move(96,481);
		aboutItem.setIcon(aboutIcon);
		newItem.setIcon(newIcon);
		openButton.setIcon(openIcon);
		cutItem.setIcon(cutIcon);
		saveButton.setIcon(saveIcon);
		JLabel1.setIcon(NCEASIcon);
		pasteItem.setIcon(pasteIcon);
		copyButton.setIcon(copyIcon);
		saveItem.setIcon(saveIcon);
		JLabel2.setIcon(NSFIcon);
		queryButton.setIcon(findIcon);
		copyItem.setIcon(copyIcon);
		aboutButton.setIcon(aboutIcon);
		openItem.setIcon(openIcon);
		pasteButton.setIcon(pasteIcon);
		newButton.setIcon(newIcon);
		//}}

		//{{INIT_MENUS
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		openItem.addActionListener(lSymAction);
		saveItem.addActionListener(lSymAction);
		exitItem.addActionListener(lSymAction);
		aboutItem.addActionListener(lSymAction);
		openButton.addActionListener(lSymAction);
		saveButton.addActionListener(lSymAction);
		aboutButton.addActionListener(lSymAction);
		SymItem lSymItem = new SymItem();
		queryButton.addActionListener(lSymAction);
		ToolBarSearchText.addActionListener(lSymAction);
		//}}
	}

    /**
     * Creates a new instance of JFrame1 with the given title.
     * @param sTitle the title for the new frame.
     * @see #JFrame1()
     */
	public ClientFramework(String sTitle)
	{
		this();
		setTitle(sTitle);
	}
	
	/**
	 * The entry point for this application.
	 * Sets the Look and Feel to the System Look and Feel.
	 * Creates a new JFrame1 and makes it visible.
	 */
	static public void main(String args[])
	{
		try {
		    // Add the following code if you want the Look and Feel
		    // to be set to the Look and Feel of the native system.
		    /*
		    try {
		        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		    } 
		    catch (Exception e) { 
		    }
		    */

			//Create a new instance of our application's frame, and make it visible.
			(new ClientFramework()).setVisible(true);
		} 
		catch (Throwable t) {
			t.printStackTrace();
			//Ensure the application exits with an error condition.
			System.exit(1);
		}
	}

    /**
     * Notifies this component that it has been added to a container
     * This method should be called by <code>Container.add</code>, and 
     * not by user code directly.
     * Overridden here to adjust the size of the frame if needed.
     * @see java.awt.Container#removeNotify
     */
	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();
		
		super.addNotify();
		
		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;
		
		// Adjust size of frame according to the insets and menu bar
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
		    menuBarHeight = menuBar.getPreferredSize().height;
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	com.symantec.itools.javax.swing.icons.ImageIcon newIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon openIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon saveIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon cutIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon copyIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon pasteIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon aboutIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon findIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon NCEASIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	com.symantec.itools.javax.swing.icons.ImageIcon NSFIcon = new com.symantec.itools.javax.swing.icons.ImageIcon();
	java.awt.FileDialog saveFileDialog = new java.awt.FileDialog(this);
	java.awt.FileDialog openFileDialog = new java.awt.FileDialog(this);
	javax.swing.JPanel JPanel2 = new javax.swing.JPanel();
	javax.swing.JToolBar JToolBar1 = new javax.swing.JToolBar();
	javax.swing.JButton newButton = new javax.swing.JButton();
	javax.swing.JButton openButton = new javax.swing.JButton();
	javax.swing.JButton saveButton = new javax.swing.JButton();
	com.symantec.itools.javax.swing.JToolBarSeparator JToolBarSeparator1 = new com.symantec.itools.javax.swing.JToolBarSeparator();
	javax.swing.JButton cutButton = new javax.swing.JButton();
	javax.swing.JButton copyButton = new javax.swing.JButton();
	javax.swing.JButton pasteButton = new javax.swing.JButton();
	com.symantec.itools.javax.swing.JToolBarSeparator JToolBarSeparator2 = new com.symantec.itools.javax.swing.JToolBarSeparator();
	javax.swing.JButton aboutButton = new javax.swing.JButton();
	com.symantec.itools.javax.swing.JToolBarSeparator JToolBarSeparator3 = new com.symantec.itools.javax.swing.JToolBarSeparator();
	javax.swing.JTextField ToolBarSearchText = new javax.swing.JTextField();
	javax.swing.JButton queryButton = new javax.swing.JButton();
	javax.swing.JPanel JPanel1 = new javax.swing.JPanel();
	javax.swing.JTabbedPane JTabbedPane1 = new javax.swing.JTabbedPane();
	javax.swing.JPanel IntroPanel = new javax.swing.JPanel();
	javax.swing.JLabel JLabel1 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel2 = new javax.swing.JLabel();
	javax.swing.JPanel JPanel3 = new javax.swing.JPanel();
	javax.swing.JPanel JPanel5 = new javax.swing.JPanel();
	javax.swing.JLabel JLabel3 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel6 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel7 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel8 = new javax.swing.JLabel();
	javax.swing.JPanel JPanel4 = new javax.swing.JPanel();
	javax.swing.JLabel JLabel4 = new javax.swing.JLabel();
	javax.swing.JButton JButton1 = new javax.swing.JButton();
	javax.swing.JLabel JLabel5 = new javax.swing.JLabel();
	javax.swing.JPanel EditorPanel = new javax.swing.JPanel();
	javax.swing.JPanel QueryPanel = new javax.swing.JPanel();
//	QueryBean queryBean1 = new QueryBean();
	javax.swing.JPanel DataViewerPanel = new javax.swing.JPanel();
	com.symantec.itools.javax.swing.borders.LineBorder lineBorder1 = new com.symantec.itools.javax.swing.borders.LineBorder();
	javax.swing.JMenuBar JMenuBar1 = new javax.swing.JMenuBar();
	javax.swing.JMenu fileMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem newItem = new javax.swing.JMenuItem();
	javax.swing.JMenuItem openItem = new javax.swing.JMenuItem();
	javax.swing.JMenuItem saveItem = new javax.swing.JMenuItem();
	javax.swing.JMenuItem saveAsItem = new javax.swing.JMenuItem();
	javax.swing.JSeparator JSeparator1 = new javax.swing.JSeparator();
	javax.swing.JMenuItem exitItem = new javax.swing.JMenuItem();
	javax.swing.JMenu editMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem cutItem = new javax.swing.JMenuItem();
	javax.swing.JMenuItem copyItem = new javax.swing.JMenuItem();
	javax.swing.JMenuItem pasteItem = new javax.swing.JMenuItem();
	javax.swing.JMenu helpMenu = new javax.swing.JMenu();
	javax.swing.JMenuItem aboutItem = new javax.swing.JMenuItem();
	//}}

	//{{DECLARE_MENUS
	//}}

	void exitApplication()
	{
		try {
	    	// Beep
	    	Toolkit.getDefaultToolkit().beep();
	    	// Show a confirmation dialog
	    	int reply = JOptionPane.showConfirmDialog(this, 
	    	                                          "Do you really want to exit?", 
	    	                                          "NCEAS Desktop Client - Exit" , 
	    	                                          JOptionPane.YES_NO_OPTION, 
	    	                                          JOptionPane.QUESTION_MESSAGE);
			// If the confirmation was affirmative, handle exiting.
			if (reply == JOptionPane.YES_OPTION)
			{
		    	this.setVisible(false);    // hide the Frame
		    	this.dispose();            // free the system resources
		    	System.exit(0);            // close the application
			}
		} catch (Exception e) {
		}
	}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == ClientFramework.this)
				ClientFramework_windowClosing(event);
		}
	}

	void ClientFramework_windowClosing(java.awt.event.WindowEvent event)
	{
		// to do: code goes here.
			 
		ClientFramework_windowClosing_Interaction1(event);
	}

	void ClientFramework_windowClosing_Interaction1(java.awt.event.WindowEvent event) {
		try {
			this.exitApplication();
		} catch (Exception e) {
		}
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == openItem)
				openItem_actionPerformed(event);
			else if (object == saveItem)
				saveItem_actionPerformed(event);
			else if (object == exitItem)
				exitItem_actionPerformed(event);
			else if (object == aboutItem)
				aboutItem_actionPerformed(event);
			else if (object == openButton)
				openButton_actionPerformed(event);
			else if (object == saveButton)
				saveButton_actionPerformed(event);
			else if (object == aboutButton)
				aboutButton_actionPerformed(event);
			if (object == queryButton)
				queryButton_actionPerformed(event);
			else if (object == ToolBarSearchText)
				ToolBarSearchText_actionPerformed(event);
			
			
		}
	}

	void openItem_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		openItem_actionPerformed_Interaction1(event);
	}

	void openItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// openFileDialog Show the FileDialog
			openFileDialog.setVisible(true);
		} catch (Exception e) {
		}
	}

	void saveItem_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		saveItem_actionPerformed_Interaction1(event);
	}

	void saveItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// saveFileDialog Show the FileDialog
			saveFileDialog.setVisible(true);
		} catch (Exception e) {
		}
	}

	void exitItem_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		exitItem_actionPerformed_Interaction1(event);
	}

	void exitItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			this.exitApplication();
		} catch (Exception e) {
		}
	}

	void aboutItem_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		aboutItem_actionPerformed_Interaction1(event);
	}

	void aboutItem_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// JAboutDialog Create with owner and show as modal
			{
				JAboutDialog JAboutDialog1 = new JAboutDialog(this);
				JAboutDialog1.setModal(true);
				JAboutDialog1.show();
			}
		} catch (Exception e) {
		}
	}

	void openButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		openButton_actionPerformed_Interaction1(event);
	}

	void openButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// openFileDialog Show the FileDialog
			openFileDialog.setVisible(true);
		} catch (Exception e) {
		}
	}

	void saveButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		saveButton_actionPerformed_Interaction1(event);
	}

	void saveButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// saveFileDialog Show the FileDialog
			saveFileDialog.setVisible(true);
		} catch (Exception e) {
		}
	}

	void aboutButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		aboutButton_actionPerformed_Interaction1(event);
	}

	void aboutButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event) {
		try {
			// JAboutDialog Create with owner and show as modal
			{
				JAboutDialog JAboutDialog1 = new JAboutDialog(this);
				JAboutDialog1.setModal(true);
				JAboutDialog1.show();
			}
		} catch (Exception e) {
		}
	}

	class SymItem implements java.awt.event.ItemListener
	{
		public void itemStateChanged(java.awt.event.ItemEvent event)
		{
			Object object = event.getSource();
			
		}
	}

	void queryButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		if (ToolBarSearchText.getText()!="") {
		    JTabbedPane1.setSelectedIndex(2);
	//	    queryBean1.searchFor(ToolBarSearchText.getText());
		}
	}
	
	

	void ToolBarSearchText_actionPerformed(java.awt.event.ActionEvent event)
	{
		if (ToolBarSearchText.getText()!="") {
		    JTabbedPane1.setSelectedIndex(2);
	//	    queryBean1.searchFor(ToolBarSearchText.getText());
		}
	}
}
