/**
 *  '$RCSfile: TextImportResultsFrame.java,v $'
 *  Copyright: 2000 Regents of the University of California and the
 *              National Center for Ecological Analysis and Synthesis
 *    Authors: @authors@
 *    Release: @release@
 *
 *   '$Author: sambasiv $'
 *     '$Date: 2003-11-19 01:42:19 $'
 * '$Revision: 1.3 $'
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package edu.ucsb.nceas.morpho.framework;


import java.awt.*;
import javax.swing.*;

import edu.ucsb.nceas.morpho.util.Log;

/**
 * A window whose purpose is  to display the results string
 * created from the data parsing.
 */
public class TextImportResultsFrame extends javax.swing.JDialog
{
	public TextImportResultsFrame()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		
		setTitle("Results");
		setModal(true);
		getContentPane().setLayout(new BorderLayout(0,0));
		setSize(600,305);
		setVisible(false);
		JPanel1.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		getContentPane().add(BorderLayout.SOUTH,JPanel1);
		CloseResultsButton.setText("Close");
		JPanel1.add(CloseResultsButton);
		getContentPane().add(BorderLayout.CENTER,JScrollPane1);
		ResultsTextArea.setLineWrap(true);
		ResultsTextArea.setWrapStyleWord(true);
		JScrollPane1.getViewport().add(ResultsTextArea);
		ResultsTextArea.setFont(new Font("MonoSpaced", Font.PLAIN, 12));
		ResultsTextArea.setBounds(0,0,402,267);
		//}}

		//{{INIT_MENUS
		//}}
	
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		CloseResultsButton.addActionListener(lSymAction);
		
		//}}
	}

	public TextImportResultsFrame(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	static public void main(String args[])
	{
		(new TextImportResultsFrame()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JPanel JPanel1 = new javax.swing.JPanel();
	javax.swing.JButton CloseResultsButton = new javax.swing.JButton();
	javax.swing.JScrollPane JScrollPane1 = new javax.swing.JScrollPane();
	javax.swing.JTextArea ResultsTextArea = new javax.swing.JTextArea();
	//}}

	//{{DECLARE_MENUS
	//}}


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == CloseResultsButton)
				CloseResultsButton_actionPerformed(event);
		}
	}

	void CloseResultsButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		CloseResultsButton_actionPerformed_Interaction1(event);
	}

	void CloseResultsButton_actionPerformed_Interaction1(java.awt.event.ActionEvent event)
	{
		
		try {
			// ResultsFrame Hide the ResultsFrame
			this.setVisible(false);
			this.dispose();
		} catch (java.lang.Exception e) {
		}
	}
}