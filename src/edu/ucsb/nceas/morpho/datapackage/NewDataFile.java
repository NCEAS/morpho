/**
 *  '$RCSfile: NewDataFile.java,v $'
 *  Copyright: 2000 Regents of the University of California and the
 *              National Center for Ecological Analysis and Synthesis
 *    Authors: @authors@
 *    Release: @release@
 *
 *   '$Author: higgins $'
 *     '$Date: 2001-12-03 03:44:09 $'
 * '$Revision: 1.1 $'
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package edu.ucsb.nceas.morpho.datapackage;

import java.awt.*;
import java.io.File;
import javax.swing.*;

public class NewDataFile extends javax.swing.JDialog
{
	public NewDataFile(Frame parent)
	{
		super(parent);
		
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setTitle("Add Data File");
		getContentPane().setLayout(new BorderLayout(0,0));
		setSize(400,225);
		setVisible(false);
		ControlsPanel.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		getContentPane().add(BorderLayout.SOUTH,ControlsPanel);
		AddFileButton.setText("Add File");
		AddFileButton.setActionCommand("Add File");
		ControlsPanel.add(AddFileButton);
		CancelAddButton.setText("Cancel");
		CancelAddButton.setActionCommand("Cancel");
		ControlsPanel.add(CancelAddButton);
		HelpLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		HelpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		HelpLabel.setForeground(java.awt.Color.black);
		HelpLabel.setText("<html><p><br>Select Data File to be Associated with this Metadata</html>");
		getContentPane().add(BorderLayout.NORTH,HelpLabel);
		CenterPanel.setLayout(new GridLayout(4,1,0,0));
		getContentPane().add(BorderLayout.CENTER,CenterPanel);
		JPanel1.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		CenterPanel.add(JPanel1);
		JPanel2.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		CenterPanel.add(JPanel2);
		JPanel3.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		CenterPanel.add(JPanel3);
		FileNameTextField.setColumns(20);
		JPanel3.add(FileNameTextField);
		FileDialogButton.setText("Browse...");
		FileDialogButton.setActionCommand("jbutton");
		JPanel3.add(FileDialogButton);
		JPanel4.setLayout(new FlowLayout(FlowLayout.CENTER,5,5));
		CenterPanel.add(JPanel4);
		//}}
    /* Center the Frame */
    Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();
    Rectangle frameDim = getBounds();
    setLocation((screenDim.width - frameDim.width) / 2 ,
            (screenDim.height - frameDim.height) /2);
		
	
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		FileDialogButton.addActionListener(lSymAction);
		CancelAddButton.addActionListener(lSymAction);
		AddFileButton.addActionListener(lSymAction);
		//}}
	}

	public NewDataFile()
	{
		this((Frame)null);
	}

	public NewDataFile(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	static public void main(String args[])
	{
		(new NewDataFile()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JPanel ControlsPanel = new javax.swing.JPanel();
	javax.swing.JButton AddFileButton = new javax.swing.JButton();
	javax.swing.JButton CancelAddButton = new javax.swing.JButton();
	javax.swing.JLabel HelpLabel = new javax.swing.JLabel();
	javax.swing.JPanel CenterPanel = new javax.swing.JPanel();
	javax.swing.JPanel JPanel1 = new javax.swing.JPanel();
	javax.swing.JPanel JPanel2 = new javax.swing.JPanel();
	javax.swing.JPanel JPanel3 = new javax.swing.JPanel();
	javax.swing.JTextField FileNameTextField = new javax.swing.JTextField();
	javax.swing.JButton FileDialogButton = new javax.swing.JButton();
	javax.swing.JPanel JPanel4 = new javax.swing.JPanel();
	//}}


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == FileDialogButton)
				FileDialogButton_actionPerformed(event);
			else if (object == CancelAddButton)
				CancelAddButton_actionPerformed(event);
			else if (object == AddFileButton)
				AddFileButton_actionPerformed(event);
		}
	}

	void FileDialogButton_actionPerformed(java.awt.event.ActionEvent event)
	{
    {
      JFileChooser filechooser = new JFileChooser();
      File datafile;
      filechooser.showOpenDialog(this);
      datafile = filechooser.getSelectedFile();
      FileNameTextField.setText(datafile.getAbsolutePath());
    }
		
			 
	}

	void CancelAddButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		this.hide();
		this.dispose();
			 
	}

	void AddFileButton_actionPerformed(java.awt.event.ActionEvent event)
	{
	    // first add the file
	    
	    // now remove this window
		this.hide();
		this.dispose();
	}
}