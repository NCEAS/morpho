MORPHO PACKAGES & CLASSES:

edu.ucsb.nceas.dtclient:

ClientFramework.java
	This is the primary class for the entire Morpho application. It is
the start-up class (i.e. it contains the static main method called when
the application is first started). It also contains the primary frame
(window) that is the top container for all other components.

ConfigXML.java
	This class provides methods for obtaining and setting hierarchical
configuration information stored in an XML file

ConnectionFrame.java
	Dialog class for connecting to server as registered user

HttpMessage.java
	Class for sending http requests to a http server. Used for all
communication with Metacat server

LoadServerFrame.java
	Obsolete class - no longer in use

PluginInterface.java
	An interface representing the methods that all plugin components
must implement

SetUserDialog.java
	Incomplete class for setting accession control list allowed users

SpashFrame.java
	Initial frame that is displayed while main program is loading

SubmitDataDialog.java
	Class for dialog used to submit data files and associated metadata
files to Metacat

SubmitDialog.java
	Dialog class for submitting individual metadata files to Metacat;
also for deletions and updates

-------
edu.ucsb.nceas.metaedit: - All classes from the XML editor mde are in this
package

AbstractMdeBean.java
AttrEditFrame.java
ContentEditFrame.java
CustomTreeCellRenderer.java
DocumentTypeInfo.java
ElementChoice.java
ElementFactory.java
IBMParser.java
Inputer.java
InputerCellEditor.java
InputerCellRenderer.java
InputFile.java
mdeBean.java
MetaDoc.java
MetaEditor.java
NewDialog.java
Options.java
ParserDriver.java
PreviewFrame.java
XMLPanels.java

------
edu.ucsb.nceas.querybean: - this package contains various classes related
to searching XML metadata files in both the local file system and the
remote metadata catalog

AbstractQueryBean.java
	This is an abstract class that just contains templates for methods
that other packages expect that the QueryBean package will be able to
handle; e.g. the ClientFramework where the QueryBean is installed as a
javabean.

ApplyXPath.java
	Not used!

DataGuideBean.java
	Primary class for LORE DataGuide type seaches. Handles display
under the 'Guided Search' subtab of the 'Search Document' function.
Displays all document types known locally and on Metacat. Allows user to
'see' a hierarchy of all elements in each of these document types and let
the user build a query that is a combination of the selected paths plus
text stored on selected path node. Multiple path queries can be generated.
DTD parser used to build path structures for local document types; calls
Metacat for server doctypes

DocFrame.java
	The DocFrame class is used for displaying the contents of an xml
docvment. It contains three tabs for displaying the document in 3 separate
views: as text, including all tags and attributes; as HTML, after
transformation using an XSLT stylesheet; and in a conbined outline/form
view. The DocFrame is a separate window.

ExternalQuery.java
	ExternalQuery is a SAX parser ContentHandler for use in parsing
the XML document returned by MetaCat as the result of a query. The
information for each document is parsed into an array and put into one row
of a TableModel object. All documents related to the returned document are
placed in a HashTable with a key which is the docid (stored in each row).

LocalQuery.java
	LocalQuery is the local equivalent of the ExternalQuery class. It
takes a set of pathquery strings and applies them as XMLPath searches to
locally stored xml documents. Methods from the Xalan XSLT tool are used to
search for paths in local XML files. This class uses the results to create
a TableModel object with each 'hit' placed in a row of the table model.

MyDefaultTreeModel.java
	Extends DefaultTreeModel to use a User object (NodeInfoDG) for
obtaining the text to be displayed by nodes in a tree control.

myDisplayHandler.java
	SAX2 event handler used in parsing XML documents for display in
the DocFrame class (extends the SAX DefaultHandler class).
myDisplayHandler builds a MyDefaultTreeModel when an XML document is
parsed.

MyDisplayRenderer.java
	Extends DefaultTreeCellRenderer to allow an icon specified in the
UserObject for each node to be displayed in that tree node. Allows for
different icons to be specified for each node in a tree. [Apparently
identical to the MyRenderer class]

myHandler.java
	SAX2 event handler used in parsing XML documents (extends the SAX
DefaultHandler class). Used in DataGuideBean and QueryConfigDialog classes

MyRenderer.java
	Extends DefaultTreeCellRenderer to allow an icon specified in the
UserObject for each node to be displayed in that tree node. Allows for
different icons to be specified for each node in a tree. [Apparently
identical to the MyDisplayRenderer class]

NodeInfo.java
	User object used to store information in tree nodes

NodeInfoDG.java
	User object used to store information in tree nodes for path
structures displayed as part of the DataGuideBean. This is a modified
version of NodeInfo that allows query information to be displayed in a
tree node in addition to just the element name.

PathQueries.java
	A collection of unique PathQuery objects; used by the
DataGuideBean class

PathQuery.java
	A single path query; includes doctype, path, and matchtext; used
by the DataGuideBean class

pathqueryXML.java
	A utility class for use in constructing a pathquery xml document
from a set of individual path queries.

QueryBean.java
	The top-level class for all queries. This class is constructed as
a java bean. It is also a container for all the individual subqueries.

QueryConfigDialog.java
	This class creates a dialog which allows the user to dynamically
set which document types are searched and returned in queries and which
fields in those documents are returned with the query result set. The
contents of result set tables are thus determined by the settings in this
dialog.

RemoteRSFrame.java
	Obsolete class; no longer in use. (Replaced by RSFrame)

RSFrame.java
	This class is a window for actually displaying the result sets of
a query in a JTable. It uses the tableModels created by the ExternalQuery
or LocalQuery classes.

XMLList.java
	Specialized extension of SAX2 ContentHandler. Used to get a list
of repeated element from XML document. Specifically, used to get list of
doctypes from Metacat for DataGuideBean.

XMLPanels.java
	This is a class designed to create a set of nested panels from an
XML document. The result is a form-like display of the XML hierarchy. This
class is used in one of the DocFrame tabbed panels. 

XMLTable.java
	Class designed for creating a table from XML document
 Given a DOM node, the node determines a table
 the number of rows in the table is equal to the number
 of child elements of original node.
 Children of each child (i.e. grandchildren of the original
 node) determine the columns. Table will have number of cols
 that equals maximum number of children of any child node.
 Data to be placed in each cell is assumed to be in TEXT node under
 Element node. Attributes ignored for now. NOT USED IN QUERYBEAN!

XPathAPI.java
	XPathAPI is a utility class for carrying out XPath searches of XML
documents. It was taken from the Apache XML Xalan source distribution.

------

edu.ucsb.nceas.dsbrowser:

DataSetBrowser.java

DataSetObjectInfo.java

DSDefaultTreeModel.java

DSRenderer.java

PackageHandler.java

Relation.java

--------

edu.ucsb.nceas.editor:

Editor.java

EditorBean.java

MyDefaultTreeModel.java

myHandler.java

MyRenderer.java

NodeInfo.java

XMLPanels.java
