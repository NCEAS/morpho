<?xml version="1.0"?>

<eml-physical minOccurs="" maxOccurs="" help="">
  <identifier system="" minOccurs="1" maxOccurs="unbounded" help="The identifier field provides a unique identifier for this metadata documentation. It will most likely be part of a  sequence of numbers or letters that are meaningful in a  larger context, such as a metadata catalog. That larger system can be identified in the 'system' attribute. Multiple identifiers can be listed corresponding to different catalog systems." editor="edu.ucsb.nceas.morpho.editor.LockedPanel">
  </identifier>
  <format minOccurs="1" maxOccurs="1" help="This element contains the name of the file's format. The file's format is typically ASCII, Unicode, or some well-known binary format (e.g., Microsoft Excel 2000).  This could be a mime-type.">
  </format>
  <characterEncoding minOccurs="0" maxOccurs="1" help="This element contains the name of the character encoding. This is typically ASCII or UTF-8, or one of the other common encodings.">
  </characterEncoding>
  <size unit="bytes" minOccurs="0" maxOccurs="1" help="This element contains information of the physical size  of the entity, typically in bytes.">
  </size>
  <authentication method="" minOccurs="0" maxOccurs="unbounded" help="This element describes authentication procedures or  techniques, typically by giving a checksum method (e.g., MD5) and  checksum value for the bytestream.">
  </authentication>
  <compressionMethod minOccurs="0" maxOccurs="1" help="This element describes any compression methods used to compress the entity, such as zip, compress, etc.">
  </compressionMethod>
  <encodingMethod minOccurs="0" maxOccurs="1" help="This element describes the entity's encoded method, such as MIME base64 encoding or binhex encoding.">
  </encodingMethod>
  <numHeaderLines minOccurs="0" maxOccurs="1" help="Number of header lines or information that prepares data.">
  </numHeaderLines>
  <recordDelimiter minOccurs="0" maxOccurs="1" help="This element specifies the record delimiter character when the format is text. The record delimiter is usually a  newline (\n) on UNIX, a carriage return (\r) on MacOS, or  both (\r\n) on Windows/DOS. Multiline records are usually  delimited with two line ending characters, for example on UNIX  it would be two newline characters (\n\n).">
  </recordDelimiter>
  <maxRecordLength minOccurs="0" maxOccurs="1" help="">
  </maxRecordLength>
  <quoteCharacter minOccurs="0" maxOccurs="unbounded" help="This element specifies a character to be used in the entity for quoting values so that field delimeters can be used within the value. This basically allows delimeter 'escaping'. The quoteChacter is typically a ' or '.">
  </quoteCharacter>
  <literalCharacter minOccurs="0" maxOccurs="unbounded" help="This element specifies a character to be used for escaping  character values so that the following character is treated as its literal value. This allows 'escaping' for special characters like quotes, commas,  and spaces when they aren't intended as a delimiter value. The literalChacter is typically a \.">
  </literalCharacter>
  <SEQUENCE0 minOccurs="0" maxOccurs="unbounded" help="">
    <fieldStartColumn minOccurs="0" maxOccurs="1" help="FixedWidth fields have a set length, thus  the end of the field can always be determined by adding the fieldWidth to the starting  column number.">
    </fieldStartColumn>
    <CHOICE1 minOccurs="1" maxOccurs="1" help="">
      <fieldWidth minOccurs="1" maxOccurs="1" help="FixedWidth fields have a set length, thus  the end of the field can always be determined by adding the fieldWidth to the starting  column number.">
      </fieldWidth>
      <fieldDelimiter minOccurs="1" maxOccurs="1" help="Variable width format fields (attributes) can vary in their  field length, thus the end of the field is  delimited by a special character called a  field delimiter (typically a comma or a space). Data sets are generally classified as fixedWidth format or variableWidth format, but we have determined that this is actually a per-field classification because one may encounter fixedWidth fields mixed together in the same data file with variableWidth fields.  In our encoding scheme, the start of each field is assumed to be the column after the last column of the previous field, or the first column if this is the first field in the dataset, unless  the starting column is explicity enumerated using the 'fieldStartColumn' element. The end column for each field is classified using either a special character delimeter indicated using the filedDelimiter element, or a fixed field length indicated by using the 'fieldWidth' element. The delimiter for the last field in the data set can be omitted. variableWidth fields can vary in their field length, and the end of the field is delimited by a special character called a field delimiter, usually a comma or a tab character. fixedWidth fields have a set length, and so the end of the field can always be determined by adding the fieldWidth to the starting column number."> </fieldDelimiter>
    </CHOICE1>
  </SEQUENCE0>
</eml-physical>