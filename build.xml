<?xml version="1.0"?>
<!--
  * build.xml
  *
  *      Authors: Matt Jones
  *    Copyright: 2000 Regents of the University of California and the
  *               National Center for Ecological Analysis and Synthesis
  *  For Details: http://www.nceas.ucsb.edu/
  *    File Info: '$Id: build.xml,v 1.88 2004-03-24 18:09:21 jones Exp $'
  *
  *  Build file for the Ant cross-platform build system for metacat
  *  See http://jakarta.apache.org for details on Ant
  *
  * usage: ant [compile|jar|install|jdoc]
-->
<project name="morpho" default="install" basedir=".">
   <target name="init">
      <property name="name" value="morpho"/>
      <property name="Name" value="Morpho Data Management Client"/>
      <property name="release" value="1.5.0beta2.0+"/>
      <property name="keystore" value="myKeystore"/>
      <property name="storepass" value="your-pw-goes-here"/>
      <property name="muser" value="uid=jones,o=NCEAS,dc=ecoinformatics,dc=org"/>
      <property name="mpass" value="your-pw-goes-here"/>
      <property name="cvsroot" value=":ext:higgins@cvs.ecoinformatics.org:/cvs" />
      <property name="eml-module" value="eml" />
      <property name="eml-tag" value="JavaHelp" />
      <property name="eml.doc.dir" value="simpledocs" />
      <property name="java.help.dir" value="/home/tao/download/jh1.1.3/javahelp/bin" />
      <property name="java.help.doc.dir" value="/home/tao/download/jh1.1.3/javahelp/bin/morphohelp" />
      <property name="helpjar" value="morphohelp.jar" />
      <filter token="release" value="${release}"/>
      <filter token="muser" value="${muser}"/>
      <filter token="mpass" value="${mpass}"/>

      <filter token="server" value="http://knb.ecoinformatics.org"/>
      <filter token="docrooturl" value="/"/>

      <property name="itisdir" value="../itislib" />
      <property name="srcdir" value="./src" />
      <property name="libdir" value="./lib" />
      <property name="xsldir" value="./xsl" />
      <property name="docuserdir" value="./docs/user" />
      <property name="jwsdir"
                value="/var/www/org.ecoinformatics.knb/software/dist/morpho" />
      <property name="testdir" value="./tests" />

      <property name="build.dir" value="./build"/>
      <property name="build.src" value="${build.dir}/src"/>
      <property name="build.dest" value="${build.dir}/classes"/>
      <property name="build.docs" value="${build.dir}/docs"/>
      <property name="build.samples" value="${build.dir}/samples"/>
      <property name="build.tests" value="${build.dir}/tests"/>
      <property name="build.data" value="${build.dir}/data"/>
      <property name="build.javadocs" value="${build.dir}/docs/api"/> 
      <property name="build.xsl" value="${build.dir}/xsl"/>

      <property name="dist.dir" value="./dist"/>
      <property name="morpho.dir" value="${dist.dir}/morpho-${release}"/>
      <property name="morpho.lib" value="${morpho.dir}/lib"/>
      <property name="morpho.xsl" value="${morpho.dir}/xsl"/>
      <property name="morpho.lib.catalog" value="${morpho.lib}/catalog"/>
      <property name="morpho.lib.frames" value="${morpho.lib}/frames"/>
      <property name="morpho.lib.sampledata" value="${morpho.lib}/sampledata"/>
      <property name="morpho.lib.style" value="${morpho.lib}/style"/>
      <property name="morpho.lib.HTTPClient" value="${morpho.lib}/HTTPClient"/>
      <property name="morpho.src" value="${morpho.dir}/src"/>
      <property name="morpho.docs" value="${morpho.dir}/docs"/>
      <property name="morpho.docs.dev" value="${morpho.docs}/dev"/>
      <property name="morpho.docs.user" value="${morpho.docs}/user"/>
      <property name="morpho.docs.licenses" value="${morpho.docs}/licenses"/>
      <property name="morpho.docs.dev.api" value="${morpho.docs.dev}/api"/>

      <property name="xml4j"
                value="${libdir}/xml4j.jar" />
      <property name="xerces"
                value="${libdir}/xercesImpl.jar" />
      <property name="apis"
                value="${libdir}/xml-apis.jar" />
      <property name="xalan"
                value="${libdir}/xalan.jar" />
      <property name="sym"
                value="${libdir}/sym.jar" />
      <property name="dtd"
                value="${libdir}/dtdparser111.jar" />
      <property name="morpho"
                value="${libdir}/${name}.jar" />
      <property name="jlf"
                value="${libdir}/shippedIcons.jar" />
      <property name="itisjar"
                value="${libdir}/itislib.jar" />
      <property name="jsse"
                value="${libdir}/jsse.jar" />
      <property name="jcert"
                value="${libdir}/jcert.jar" />
      <property name="jhelp"
                value="${libdir}/jhall.jar" />
      <property name="jnet"
                value="${libdir}/jnet.jar" />
      <property name="help"
	        value="${libdir}/morphohelp.jar" />
      <property name="httpclient"
                value="${libdir}/httpclient.jar" />
      <property name="lmap"
                value="${libdir}/liveMap.jar" />
      <property name="kunststoff"
                value="${libdir}/kunststoff.jar" />
      <property name="morpho-config"
                value="${libdir}/morpho-config.jar" />
      <property name="utilities"
                value="${libdir}/utilities.jar" />
      <property name="cpath"
                value="lib/jsse.jar:lib/jcert.jar:lib/jnet.jar:${xerces}:${apis}:${kunststoff}:${xalan}:${xml4j}:${build.dest}:${sym}:${dtd}:${jlf}:${itisjar}:${httpclient}:${lmap}:${morpho-config}:${jhelp}:${utilities}"/>
      <property name="package.home" value="edu/ucsb/nceas" />

   </target>

   <target name="prepare" depends="init">
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${build.src}"/>
      <mkdir dir="${build.dest}"/>
      <mkdir dir="${build.javadocs}"/>

       <!--
      <copy todir="${build.src}" filtering="no">
        <fileset dir="${srcdir}">
          <exclude name="**/CVS*"/>
          <exclude name="**/.#*"/>
        </fileset>
      </copy>
       -->
   </target>
   
   <target name="emldoc" depends="prepare">
     <!-- checkout eml moduel -->
     <echo>Enter CVS password: </echo>
     <cvs cvsRoot="${cvsroot}"
          package="${eml-module}"
          tag="${eml-tag}"
          dest="${build.docs}" />
     <ant dir="${build.docs}/${eml-module}" target="simpledocs" />
     <mkdir dir="${java.help.doc.dir}" />
     <copy todir="${java.help.doc.dir}" filtering="no">
        <fileset dir="${build.docs}/${eml-module}/${eml.doc.dir}">
          <include name="**/*.html" />
          <include name="**/*.png" />
        </fileset>
     </copy>
   
   </target>


   <target name="utils_update" depends="prepare">
     <!-- checkout utilities moduel -->
     <echo>Enter CVS password: </echo>
     <cvs cvsRoot="${cvsroot}"
          package="utilities"
          dest="${build.dir}" />
     <ant inheritAll="false" dir="${build.dir}/utilities" target="jar" />
     <delete file="${utilities}" />
     <copy file="${build.dir}/utilities/build/utilities.jar" todir="${libdir}" />
   </target>

   
   <target name="eml_update" depends="prepare">
     <!-- checkout utilities moduel -->
     <echo>Enter CVS password: </echo>
     <cvs cvsRoot="${cvsroot}"
          package="eml"
          dest="${build.dir}" />
   </target>

   
   <target name="helpjar" depends="emldoc">
     <echo>Please download JavaHelp before running help target!</echo>
     <echo>${java.help.dir}</echo>
     <copy todir="${java.help.doc.dir}" filtering="no">
        <fileset dir="${docuserdir}">
          <include name="**/*.html" />
          <include name="**/*.jpg" />
          <include name="**/*.gif" />
          <include name="*.css" />
        </fileset>
      </copy>
      <copy todir="${java.help.dir}" filtering="no">
        <fileset dir="${docuserdir}">
          <include name="*.xml" />
          <include name="*.jhm" />
          <include name="*.hs" />
        </fileset>
      </copy>
      <!-- Creating search database -->
      <exec dir="${java.help.dir}" executable="${java.help.dir}/jhindexer" >
        <arg line="morphohelp" />
      </exec>
      <delete file="${libdir}/${helpjar}" />
      <jar destfile="${libdir}/${helpjar}" basedir="${java.help.dir}" includes="*.xml, *.jhm, *.hs, morphohelp/**/*, JavaHelpSearch/**/*">  
      </jar>
      
   </target>

   <!--
   <target name="compile" depends="clean,itis,prepare">
   -->
   <target name="compile" depends="prepare">

      <jar jarfile="lib/httpclient.jar">
        <fileset dir="lib" includes="HTTPClient/**/*.class"/>
      </jar>

      <javac srcdir="${srcdir}"
             destdir="${build.dest}"
             debug="on"
             classpath="${cpath}" />
   </target>

   <target name="jar" depends="compile">
      <delete file="${build.dir}/${name}.jar" />
      <delete file="${build.dir}/${name}-config.jar" />
      <copy todir="${build.dest}/${package.home}/morpho/framework" filtering="no">
        <fileset dir="${srcdir}/${package.home}/morpho/framework/images">
        </fileset>
      </copy>
      <copy todir="${build.dest}/${package.home}/morpho/datapackage" filtering="no">
        <fileset dir="${srcdir}/${package.home}/morpho/datapackage/images">
        </fileset>
      </copy>
      <copy todir="${build.dest}/${package.home}/morpho/query" filtering="no">
        <fileset dir="${srcdir}/${package.home}/morpho/query/images">
        </fileset>
      </copy>
      <copy todir="${build.dest}/${package.home}/morpho/util" filtering="no">
         <fileset dir="${srcdir}/${package.home}/morpho/util/images">
   </fileset>
      </copy>
      <copy todir="${build.dest}/${package.home}/morpho/editor" filtering="no">
        <fileset dir="${srcdir}/${package.home}/morpho/editor/images">
        </fileset>
      </copy>
      <copy todir="${build.dest}/${package.home}/morpho/plugins/datapackagewizard/pages" filtering="no">
         <fileset dir="${srcdir}/${package.home}/morpho/plugins/datapackagewizard/pages/images">
   </fileset>
      </copy>
      <!--
      <copy todir="${build.dest}" filtering="no">
        <fileset dir="${libdir}" excludes="*.jar,HTTPClient/**,SchemaParser/**,*.zip,*.gz"/>
      </copy>
      -->
      <jar jarfile="${build.dir}/${name}.jar" basedir="${build.dest}"
           includes="${package.home}/${name}/** com/**" />
      <jar jarfile="${build.dir}/${name}-config.jar" basedir="${libdir}"
           excludes="*.jar,HTTPClient/**,SchemaParser/**,LiveMap/**,*.zip,*.gz"/>
   </target>

   <target name="install" depends="jar">
      <copy file="${build.dir}/${name}.jar" todir="${libdir}" />
      <copy file="${build.dir}/${name}-config.jar" todir="${libdir}" />
      <echo message="Install complete. Use the morpho script to run it." />
   </target>

   <target name="sign" depends="install">
      <signjar jar="${libdir}/${name}.jar" alias="myself"
               storepass="${storepass}" keystore="${keystore}"/>
      <signjar jar="${libdir}/${name}-config.jar" alias="myself"
               storepass="${storepass}" keystore="${keystore}"/>
   </target>

   <target name="jws" depends="sign">
      <mkdir dir="${jwsdir}"/>
      <copy todir="${jwsdir}" filtering="no">
        <fileset dir=".">
          <include name="*.jnlp"/>
        </fileset>
        <fileset dir="${libdir}">
          <include name="*.jar"/>
        </fileset>
      </copy>
   </target>

   <target name="dist" depends="install,docs,jdoc">
      <mkdir dir="${dist.dir}"/>
      <delete dir="${morpho.dir}" />
      <mkdir dir="${morpho.dir}"/>
      <mkdir dir="${morpho.lib}"/>
      <mkdir dir="${morpho.lib.sampledata}"/>
      <mkdir dir="${morpho.docs}"/>
      <mkdir dir="${morpho.xsl}"/>
      <mkdir dir="${morpho.docs.dev}"/>
      <mkdir dir="${morpho.docs.dev.api}"/>
      <copy file="./LICENSE" todir="${morpho.dir}"/>
      <copy file="./morpho" todir="${morpho.dir}"/>
      <copy file="./morpho.bat" todir="${morpho.dir}"/>
      <copy file="./README.txt" todir="${morpho.dir}"/>
      <copy todir="${morpho.lib.sampledata}">
        <fileset dir="./lib/sampledata"/>
      </copy>
      <copy todir="${morpho.xsl}">
        <fileset dir="./xsl"/>
      </copy>
      <copy todir="${morpho.docs}">
        <fileset dir="${build.docs}">
          <exclude name="**/api"/>
        </fileset>
      </copy>
      <copy todir="${morpho.docs.dev.api}">
        <fileset dir="${build.docs}/api"/>
      </copy>
      <copy file="./lib/itislib.jar" todir="${morpho.lib}"/>
      <copy file="./lib/shippedIcons.jar" todir="${morpho.lib}"/>
      <copy file="./lib/morpho.jar" todir="${morpho.lib}"/>
      <copy file="./lib/xalan.jar" todir="${morpho.lib}"/>
      <copy file="./lib/httpclient.jar" todir="${morpho.lib}"/>
      <copy file="./lib/jsse.jar" todir="${morpho.lib}"/>
      <copy file="./lib/jcert.jar" todir="${morpho.lib}"/>
      <copy file="./lib/jnet.jar" todir="${morpho.lib}"/>
      <copy file="./lib//${name}-config.jar" todir="${morpho.lib}"/>
      <copy file="./lib/xercesImpl.jar" todir="${morpho.lib}"/>
      <copy file="./lib/kunststoff.jar" todir="${morpho.lib}"/>
      <copy file="./lib/xml-apis.jar" todir="${morpho.lib}"/>  
      <copy file="./lib/liveMap.jar" todir="${morpho.lib}"/>
      <copy file="./lib/jhall.jar" todir="${morpho.lib}"/>
      <copy file="./lib/morphohelp.jar" todir="${morpho.lib}"/>


      <delete file="./lib/morpho-${release}.zip"/>
      <zip zipfile="./lib/morpho-${release}.zip" basedir="${dist.dir}"/>
      <delete file="./lib/morpho-${release}.tar.gz" />
      <tar tarfile="./lib/morpho-${release}.tar" basedir="${dist.dir}"/>
      <gzip zipfile="./lib/morpho-${release}.tar.gz"
                src="./lib/morpho-${release}.tar"/>
      <delete file="./lib/morpho-${release}.tar" />
  </target>

  <target name="distsrc" depends="dist">
      <mkdir dir="${morpho.src}"/>
      <copy todir="${morpho.src}">
        <fileset dir="./src"/>
      </copy>
      <mkdir dir="${morpho.lib.HTTPClient}"/>
      <copy todir="${morpho.lib.HTTPClient}">
        <fileset dir="./lib/HTTPClient"/>
      </copy>

      <delete file="./lib/morpho-src-${release}.zip"/>
      <zip zipfile="./lib/morpho-src-${release}.zip" basedir="${dist.dir}"/>
      <delete file="./lib/morpho-src-${release}.tar.gz" />
      <tar tarfile="./lib/morpho-src-${release}.tar" basedir="${dist.dir}"/>
      <gzip zipfile="./lib/morpho-src-${release}.tar.gz"
                src="./lib/morpho-src-${release}.tar"/>
      <delete file="./lib/morpho-src-${release}.tar" />
  </target>

   <target name="clean" depends="init">
       <delete dir="${build.dir}" />
       <delete dir="${morpho.dir}" />
       <delete file="${libdir}/${name}.jar" />
       <delete file="${libdir}/${name}-config.jar" />
       <delete dir="${dist.dir}"/>
   </target>

   <target name="docs" depends="init">
     <mkdir dir="${build.docs}"/>
     <mkdir dir="${build.docs}/user"/>
     <mkdir dir="${build.docs}/user/advanced"/>
     <mkdir dir="${build.docs}/licenses"/>
     <copy file="./docs/README.txt" todir="${build.docs}"/>
     <copy todir="${build.docs}/licenses" filtering="no">
       <fileset dir="./docs/licenses">
          <exclude name="**/*.html"/>
       </fileset>
     </copy>
     <copy todir="${build.docs}/user" filtering="no">
       <fileset dir="./docs/user">
          <exclude name="**/*.html"/>
       </fileset>
     </copy>
     <copy todir="${build.docs}/user" filtering="yes">
       <fileset dir="./docs/user">
         <include name="*.html"/>
       </fileset>
     </copy>
     <copy todir="${build.docs}/user/advanced" filtering="yes">
       <fileset dir="./docs/user/advanced">
         <include name="*.html"/>
       </fileset>
     </copy>

   </target>

   <target name="jdoc" depends="init">
       <mkdir dir="${build.javadocs}" />
       <javadoc packagenames="edu.ucsb.nceas.*"
           sourcepath="src"
           destdir="${build.javadocs}"
           author="true"
           version="true"
           use="true"
           windowtitle="${Name} API"
           doctitle="&lt;h1&gt;${Name}&lt;/h1&gt;"
           bottom="&lt;i&gt;Copyright &#169; 2000 National Center for Ecological Analysis and Synthesis. All Rights Reserved.&lt;/i&gt;"
       />
   </target>

   <target name="morpho" depends="install">
     <java classname="edu.ucsb.nceas.morpho.Morpho"
           classpath="${cpath}:${morpho}:${help}"
           fork="yes" >
       <arg value="-Xmx128m"/>
       <arg value="-Xss1m"/>
       <jvmarg line="-Djava.protocol.handler.pkgs=HTTPClient"/>
     </java>
   </target>

   <!-- use the ant "junit" task to run JUnit tests. -->
   <target name="test" depends="install">
      <!-- copy and compile the tests into a jar file -->
      <mkdir dir="${build.tests}"/>
      <copy todir="${build.tests}" filtering="yes">
        <fileset dir="${testdir}">
          <exclude name="**/CVS*"/>
          <exclude name="**/.#*"/>
        </fileset>
      </copy>
      <javac srcdir="${build.tests}"
             destdir="${build.dest}"
             classpath="${cpath}"
             debug="on"/>

      <jar jarfile="${build.dir}/${name}-test.jar" basedir="${build.dest}"
           includes="${package.home}/${name}test/**" />

      <!-- use the ant "junit" task to run JUnit tests. -->
      <junit printsummary="yes" haltonfailure="no" fork="no"
             haltonerror="no">
        <classpath>
          <pathelement path="${cpath}:${build.dir}/${name}-test.jar" />
        </classpath>

        <formatter type="plain" />

        <batchtest fork="yes" todir="${build.dir}">
          <fileset dir="${build.tests}">
            <include name="**/*.java" />
          </fileset>
        </batchtest>
     </junit>
   </target>

   <!-- use the ant "junit" task to run one JUnit tests. -->
   <target name="runonetest" depends="install">
     <!-- set the test that you want to run here -->
     <property name="testtorun" value="ItisTest.java"/>
      <!-- copy and compile the tests into a jar file -->
      <mkdir dir="${build.tests}"/>
      <copy todir="${build.tests}" filtering="yes">
        <fileset dir="${testdir}">
          <exclude name="**/CVS*"/>
          <exclude name="**/.#*"/>
        </fileset>
      </copy>
      <javac srcdir="${build.tests}"
             destdir="${build.dest}"
             classpath="${cpath}"
             debug="on"/>

      <jar jarfile="${build.dir}/${name}-test.jar" basedir="${build.dest}"
           includes="${package.home}/${name}test/**" />

      <!-- use the ant "junit" task to run JUnit one test. -->
      <junit printsummary="yes" haltonfailure="no" fork="no"
             haltonerror="no">
        <classpath>
          <pathelement path="${cpath}:${build.dir}/${name}-test.jar" />
        </classpath>

        <formatter type="plain" />

        <batchtest fork="yes" todir="${build.dir}">
          <fileset dir="${build.tests}">
             <include name="**/${testtorun}" />
          </fileset>
        </batchtest>
     </junit>
   </target>

   <!-- build the itis library for querying ITIS -->
   <target name="itis" depends="init">
     <ant dir="${itisdir}" />
     <copy file="${itisdir}/lib/itislib.jar" todir="${libdir}" />
   </target>

</project>
